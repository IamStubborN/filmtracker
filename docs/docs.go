// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-04-12 19:07:39.545674089 +0300 EEST m=+0.019685504

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "DITS test FilmTracker project.",
        "title": "FilmTracker API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "filmtracker-api.com",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users/auth/signout/": {
            "get": {
                "description": "Sign Out from server, delete cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Sign Out",
                "responses": {
                    "200": {
                        "description": "{\"success\":\"Sign Out\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "{\"error\":\"http: named cookie not present\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Refresh": {
            "type": "apiKey",
            "name": "Refresh",
            "in": "cookies"
        },
        "Token": {
            "type": "apiKey",
            "name": "Token",
            "in": "cookies"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
